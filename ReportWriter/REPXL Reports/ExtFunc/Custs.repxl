<?xml version="1.0"?>
<ReportLibrary xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <LibraryItems>
    <ReportLibraryItem>
      <Report>/// &lt;XRTypeInfo&gt;
///   &lt;AssemblyFullName&gt;DevExpress.XtraReports.v9.1, Version=9.1.3.0, Culture=neutral, PublicKeyToken=4aca31c24e330653&lt;/AssemblyFullName&gt;
///   &lt;AssemblyLocation&gt;C:\Clarion9\bin\DevExpress.XtraReports.v9.1.dll&lt;/AssemblyLocation&gt;
///   &lt;TypeName&gt;DevExpress.XtraReports.UI.XtraReport&lt;/TypeName&gt;
///   &lt;Localization&gt;en-US&lt;/Localization&gt;
///   &lt;References&gt;
///     &lt;Reference Path="C:\Clarion9\bin\Softvelocity.RWClasses.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SoftVelocity.Clarion.Runtime.Procedures.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SoftVelocity.Clarion.FileIO.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SoftVelocity.Clarion.Runtime.Classes.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\DataDictionary.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ICSharpCode.Core.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\log4net.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SoftVelocity.Ide.Core.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\SoftVelocity.DataDictionary.Design.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\Aga.Controls.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ICSharpCode.SharpDevelop.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SmartPropertyGrid.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\Skybound.VisualTips.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\WeifenLuo.WinFormsUI.Docking.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.Build.Framework\2.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Framework.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ICSharpCode.TextEditor.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ICSharpCode.SharpDevelop.Dom.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ICSharpCode.NRefactory.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\Mono.Cecil.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ICSharpCode.SharpDevelop.Widgets.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.Build.Engine\2.0.0.0__b03f5f7f11d50a3a\Microsoft.Build.Engine.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SeriousBit.Licensing.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\System.Management\2.0.0.0__b03f5f7f11d50a3a\System.Management.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.JScript\8.0.0.0__b03f5f7f11d50a3a\Microsoft.JScript.dll" /&gt;
///     &lt;Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.Vsa\8.0.0.0__b03f5f7f11d50a3a\Microsoft.Vsa.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\ClarionDL.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\clarion.asl.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\DataDictionaryFile.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\Clarion.Core.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\clarion.dct.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\Clarion.Options.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\DataDictionaryEditor.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\CommonSources.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\ClarionNetReport.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\Controls\CommonControl.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\CommonProperties.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\ClarionParser.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\SoftVelocity.Clarion.CompilerMessages.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\ClarionNetWindow.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\clarion.prj.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\clarion.tplhelp.dll" /&gt;
///     &lt;Reference Path="C:\Clarion9\bin\AddIns\BackendBindings\ClarionBinding\Common\Browser.dll" /&gt;
///   &lt;/References&gt;
/// &lt;/XRTypeInfo&gt;
namespace XtraReportSerialization {
    
    public class xtraReport1 : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand detailBand1;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLine line2;
        private Clarion.Data.DynFileAdapter TableTableAdapter;
        private System.Data.DataSet dataSet1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField AddressField;
        private DevExpress.XtraReports.UI.CalculatedField CSZField;
        private DevExpress.XtraReports.UI.CalculatedField FullNameField;
        private System.Resources.ResourceManager _resources;
        public xtraReport1() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAABAAAAAAAAAFBBRFBBRFC7QGePA" +
                        "AAAAAcBAABGVABhAGIAbABlAFQAYQBiAGwAZQBBAGQAYQBwAHQAZQByAC4AWABtAGwAVgBpAGUAdwBEA" +
                        "GUAcwBjAHIAaQBwAHQAbwByAAAAAAABjiw8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJ1dGYtM" +
                        "TYiPz4NCjxSV1ZpZXdEZXNjcmlwdG9yIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YT" +
                        "UxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlb" +
                        "WEiPg0KICA8RmlsZT5DdXN0b21lcjwvRmlsZT4NCiAgPEpvaW5zPg0KICAgIDxSV0pvaW4+DQogICAgI" +
                        "CA8RmlsZT5TdGF0ZXM8L0ZpbGU+DQogICAgICA8Sm9pbnMgLz4NCiAgICAgIDxLZXk+U3RhdGVDb2RlS" +
                        "2V5PC9LZXk+DQogICAgICA8RmllbGRzPg0KICAgICAgICA8c3RyaW5nPlN0YXRlPC9zdHJpbmc+DQogI" +
                        "CAgICA8L0ZpZWxkcz4NCiAgICA8L1JXSm9pbj4NCiAgPC9Kb2lucz4NCiAgPERpY3ROYW1lPkM6XENsY" +
                        "XJpb245XEV4YW1wbGVzXFJlcG9ydFdyaXRlclxSRVBYTCBSZXBvcnRzXEV4dEZ1bmNcQ3VzdHMuZGN0P" +
                        "C9EaWN0TmFtZT4NCiAgPE1vZGlmaWVkPjIwMTAtMDUtMDVUMTY6Mzc6MDcuMDAxPC9Nb2RpZmllZD4NC" +
                        "iAgPEZpbGVEZXNjcmlwdG9ycz4NCiAgICA8c3RyaW5nPiZsdDtGaWxlIGxhYmVsPSJDdXN0b21lciIgd" +
                        "mVyc2lvbj0iMSIgY29tcGF0aWJsZT0iMSIgZHJpdmVyPSJUT1BTUEVFRCIgcHJlZml4PSJDVVMiIGNyZ" +
                        "WF0ZT0idHJ1ZSIgdGhyZWFkPSJ0cnVlIiZndDsNCiAgJmx0O0tleSBsYWJlbD0iS2V5Q3VzdE51bWJlc" +
                        "iIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZT0iMSIgdHlwZT0iS2V5IiBub2Nhc2U9InRydWUiIG9wdD0id" +
                        "HJ1ZSImZ3Q7DQogICAgJmx0O0ZpZWxkIGxhYmVsPSJDdXN0TnVtYmVyIiBhc2NlbmRpbmc9InRydWUiI" +
                        "C8mZ3Q7DQogICZsdDsvS2V5Jmd0Ow0KICAmbHQ7S2V5IGxhYmVsPSJLZXlGdWxsTmFtZSIgdmVyc2lvb" +
                        "j0iMSIgY29tcGF0aWJsZT0iMSIgdHlwZT0iS2V5IiBkdXBsaWNhdGVzPSJ0cnVlIiBub2Nhc2U9InRyd" +
                        "WUiIG9wdD0idHJ1ZSImZ3Q7DQogICAgJmx0O0ZpZWxkIGxhYmVsPSJMYXN0TmFtZSIgYXNjZW5kaW5nP" +
                        "SJ0cnVlIiAvJmd0Ow0KICAgICZsdDtGaWVsZCBsYWJlbD0iRmlyc3ROYW1lIiBhc2NlbmRpbmc9InRyd" +
                        "WUiIC8mZ3Q7DQogICAgJmx0O0ZpZWxkIGxhYmVsPSJNSSIgYXNjZW5kaW5nPSJ0cnVlIiAvJmd0Ow0KI" +
                        "CAmbHQ7L0tleSZndDsNCiAgJmx0O0tleSBsYWJlbD0iS2V5Q29tcGFueSIgdmVyc2lvbj0iMSIgY29tc" +
                        "GF0aWJsZT0iMSIgdHlwZT0iS2V5IiBkdXBsaWNhdGVzPSJ0cnVlIiBub2Nhc2U9InRydWUiJmd0Ow0KI" +
                        "CAgICZsdDtGaWVsZCBsYWJlbD0iQ29tcGFueSIgYXNjZW5kaW5nPSJ0cnVlIiAvJmd0Ow0KICAmbHQ7L" +
                        "0tleSZndDsNCiAgJmx0O0tleSBsYWJlbD0iS2V5WmlwQ29kZSIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZ" +
                        "T0iMSIgdHlwZT0iS2V5IiBkdXBsaWNhdGVzPSJ0cnVlIiBub2Nhc2U9InRydWUiJmd0Ow0KICAgICZsd" +
                        "DtGaWVsZCBsYWJlbD0iWmlwQ29kZSIgYXNjZW5kaW5nPSJ0cnVlIiAvJmd0Ow0KICAmbHQ7L0tleSZnd" +
                        "DsNCiAgJmx0O0tleSBsYWJlbD0iU3RhdGVLZXkiIHZlcnNpb249IjEiIGNvbXBhdGlibGU9IjEiIHR5c" +
                        "GU9IktleSIgZHVwbGljYXRlcz0idHJ1ZSIgbm9jYXNlPSJ0cnVlIiBvcHQ9InRydWUiJmd0Ow0KICAgI" +
                        "CZsdDtGaWVsZCBsYWJlbD0iU3RhdGUiIGFzY2VuZGluZz0idHJ1ZSIgLyZndDsNCiAgJmx0Oy9LZXkmZ" +
                        "3Q7DQogICZsdDtGaWVsZCBsYWJlbD0iQ3VzdE51bWJlciIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZT0iM" +
                        "SIgdHlwZT0iTE9ORyIgLyZndDsNCiAgJmx0O0ZpZWxkIGxhYmVsPSJDb21wYW55IiB2ZXJzaW9uPSIxI" +
                        "iBjb21wYXRpYmxlPSIxIiB0eXBlPSJTVFJJTkciIHNpemU9IjIwIiAvJmd0Ow0KICAmbHQ7RmllbGQgb" +
                        "GFiZWw9IkZpcnN0TmFtZSIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZT0iMSIgdHlwZT0iU1RSSU5HIiBza" +
                        "XplPSIyMCIgLyZndDsNCiAgJmx0O0ZpZWxkIGxhYmVsPSJNSSIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZ" +
                        "T0iMSIgdHlwZT0iU1RSSU5HIiBzaXplPSIxIiAvJmd0Ow0KICAmbHQ7RmllbGQgbGFiZWw9Ikxhc3ROY" +
                        "W1lIiB2ZXJzaW9uPSIxIiBjb21wYXRpYmxlPSIxIiB0eXBlPSJTVFJJTkciIHNpemU9IjI1IiAvJmd0O" +
                        "w0KICAmbHQ7RmllbGQgbGFiZWw9IkFkZHJlc3MxIiB2ZXJzaW9uPSIxIiBjb21wYXRpYmxlPSIxIiB0e" +
                        "XBlPSJTVFJJTkciIHNpemU9IjM1IiAvJmd0Ow0KICAmbHQ7RmllbGQgbGFiZWw9IkFkZHJlc3MyIiB2Z" +
                        "XJzaW9uPSIxIiBjb21wYXRpYmxlPSIxIiB0eXBlPSJTVFJJTkciIHNpemU9IjM1IiAvJmd0Ow0KICAmb" +
                        "HQ7RmllbGQgbGFiZWw9IkNpdHkiIHZlcnNpb249IjEiIGNvbXBhdGlibGU9IjEiIHR5cGU9IlNUUklOR" +
                        "yIgc2l6ZT0iMjUiIC8mZ3Q7DQogICZsdDtGaWVsZCBsYWJlbD0iU3RhdGUiIHZlcnNpb249IjEiIGNvb" +
                        "XBhdGlibGU9IjEiIHR5cGU9IlNUUklORyIgc2l6ZT0iMiIgLyZndDsNCiAgJmx0O0ZpZWxkIGxhYmVsP" +
                        "SJaaXBDb2RlIiB2ZXJzaW9uPSIxIiBjb21wYXRpYmxlPSIxIiB0eXBlPSJTVFJJTkciIHNpemU9IjEwI" +
                        "iAvJmd0Ow0KICAmbHQ7RmllbGQgbGFiZWw9IlBob25lTnVtYmVyIiB2ZXJzaW9uPSIxIiBjb21wYXRpY" +
                        "mxlPSIxIiB0eXBlPSJTVFJJTkciIHNpemU9IjEwIiAvJmd0Ow0KICAmbHQ7RmllbGQgbGFiZWw9IkV4d" +
                        "GVuc2lvbiIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZT0iMSIgdHlwZT0iU1RSSU5HIiBzaXplPSI0IiAvJ" +
                        "md0Ow0KICAmbHQ7RmllbGQgbGFiZWw9IlBob25lVHlwZSIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZT0iM" +
                        "SIgdHlwZT0iU1RSSU5HIiBzaXplPSI4IiAvJmd0Ow0KJmx0Oy9GaWxlJmd0Ozwvc3RyaW5nPg0KICAgI" +
                        "DxzdHJpbmc+Jmx0O0ZpbGUgbGFiZWw9IlN0YXRlcyIgdmVyc2lvbj0iMSIgY29tcGF0aWJsZT0iMSIgZ" +
                        "HJpdmVyPSJUT1BTUEVFRCIgcHJlZml4PSJTVEEiIGNyZWF0ZT0idHJ1ZSIgdGhyZWFkPSJ0cnVlIiZnd" +
                        "DsNCiAgJmx0O0tleSBsYWJlbD0iU3RhdGVDb2RlS2V5IiB2ZXJzaW9uPSIxIiBjb21wYXRpYmxlPSIxI" +
                        "iB0eXBlPSJLZXkiIG5vY2FzZT0idHJ1ZSIgb3B0PSJ0cnVlIiZndDsNCiAgICAmbHQ7RmllbGQgbGFiZ" +
                        "Ww9IlN0YXRlQ29kZSIgYXNjZW5kaW5nPSJ0cnVlIiAvJmd0Ow0KICAmbHQ7L0tleSZndDsNCiAgJmx0O" +
                        "0ZpZWxkIGxhYmVsPSJTdGF0ZUNvZGUiIHZlcnNpb249IjEiIGNvbXBhdGlibGU9IjEiIHR5cGU9IlNUU" +
                        "klORyIgc2l6ZT0iMiIgLyZndDsNCiAgJmx0O0ZpZWxkIGxhYmVsPSJOYW1lIiB2ZXJzaW9uPSIxIiBjb" +
                        "21wYXRpYmxlPSIxIiB0eXBlPSJTVFJJTkciIHNpemU9IjI1IiAvJmd0Ow0KJmx0Oy9GaWxlJmd0Ozwvc" +
                        "3RyaW5nPg0KICA8L0ZpbGVEZXNjcmlwdG9ycz4NCiAgPERlc2NyRmlsZU5hbWVzPg0KICAgIDxzdHJpb" +
                        "mc+Q3VzdG9tZXI8L3N0cmluZz4NCiAgICA8c3RyaW5nPlN0YXRlczwvc3RyaW5nPg0KICA8L0Rlc2NyR" +
                        "mlsZU5hbWVzPg0KICA8RmlsZVBhdGhzPg0KICAgIDxSV1BhdGg+DQogICAgICA8TWFzaz5DdXN0b21lc" +
                        "jwvTWFzaz4NCiAgICAgIDxQYXRoPkM6XENsYXJpb245XEV4YW1wbGVzXFJlcG9ydFdyaXRlclxSRVBYT" +
                        "CBSZXBvcnRzXEV4dEZ1bmNcQ1VTVE9NRVIuVFBTPC9QYXRoPg0KICAgICAgPElzUmVsYXRpdmU+ZmFsc" +
                        "2U8L0lzUmVsYXRpdmU+DQogICAgPC9SV1BhdGg+DQogICAgPFJXUGF0aD4NCiAgICAgIDxNYXNrPlN0Y" +
                        "XRlczwvTWFzaz4NCiAgICAgIDxQYXRoPkM6XENsYXJpb245XEV4YW1wbGVzXFJlcG9ydFdyaXRlclxSR" +
                        "VBYTCBSZXBvcnRzXEV4dEZ1bmNcU1RBVEVTLlRQUzwvUGF0aD4NCiAgICAgIDxJc1JlbGF0aXZlPmZhb" +
                        "HNlPC9Jc1JlbGF0aXZlPg0KICAgIDwvUldQYXRoPg0KICA8L0ZpbGVQYXRocz4NCiAgPEFkZFBhdGhzI" +
                        "C8+DQogIDxQaWN0dXJlcz4NCiAgICA8UldQaWN0dXJlSW5mbz4NCiAgICAgIDxGaWVsZE5hbWU+Q1VTO" +
                        "kN1c3ROdW1iZXI8L0ZpZWxkTmFtZT4NCiAgICAgIDxQaWN0dXJlPkBuXzc8L1BpY3R1cmU+DQogICAgP" +
                        "C9SV1BpY3R1cmVJbmZvPg0KICAgIDxSV1BpY3R1cmVJbmZvPg0KICAgICAgPEZpZWxkTmFtZT5DVVM6Q" +
                        "29tcGFueTwvRmllbGROYW1lPg0KICAgICAgPFBpY3R1cmU+QHMyMDwvUGljdHVyZT4NCiAgICA8L1JXU" +
                        "GljdHVyZUluZm8+DQogICAgPFJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPkNVUzpGaXJzd" +
                        "E5hbWU8L0ZpZWxkTmFtZT4NCiAgICAgIDxQaWN0dXJlPkBzMjA8L1BpY3R1cmU+DQogICAgPC9SV1BpY" +
                        "3R1cmVJbmZvPg0KICAgIDxSV1BpY3R1cmVJbmZvPg0KICAgICAgPEZpZWxkTmFtZT5DVVM6TUk8L0ZpZ" +
                        "WxkTmFtZT4NCiAgICAgIDxQaWN0dXJlPkBzMTwvUGljdHVyZT4NCiAgICA8L1JXUGljdHVyZUluZm8+D" +
                        "QogICAgPFJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPkNVUzpMYXN0TmFtZTwvRmllbGROY" +
                        "W1lPg0KICAgICAgPFBpY3R1cmU+QHMyNTwvUGljdHVyZT4NCiAgICA8L1JXUGljdHVyZUluZm8+DQogI" +
                        "CAgPFJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPkNVUzpBZGRyZXNzMTwvRmllbGROYW1lP" +
                        "g0KICAgICAgPFBpY3R1cmU+QHMzNTwvUGljdHVyZT4NCiAgICA8L1JXUGljdHVyZUluZm8+DQogICAgP" +
                        "FJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPkNVUzpBZGRyZXNzMjwvRmllbGROYW1lPg0KI" +
                        "CAgICAgPFBpY3R1cmU+QHMzNTwvUGljdHVyZT4NCiAgICA8L1JXUGljdHVyZUluZm8+DQogICAgPFJXU" +
                        "GljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPkNVUzpDaXR5PC9GaWVsZE5hbWU+DQogICAgICA8U" +
                        "GljdHVyZT5AczI1PC9QaWN0dXJlPg0KICAgIDwvUldQaWN0dXJlSW5mbz4NCiAgICA8UldQaWN0dXJlS" +
                        "W5mbz4NCiAgICAgIDxGaWVsZE5hbWU+Q1VTOlN0YXRlPC9GaWVsZE5hbWU+DQogICAgICA8UGljdHVyZ" +
                        "T5AczI8L1BpY3R1cmU+DQogICAgPC9SV1BpY3R1cmVJbmZvPg0KICAgIDxSV1BpY3R1cmVJbmZvPg0KI" +
                        "CAgICAgPEZpZWxkTmFtZT5DVVM6WmlwQ29kZTwvRmllbGROYW1lPg0KICAgICAgPFBpY3R1cmU+QEsjI" +
                        "yMjI3wtIyMjI0tCPC9QaWN0dXJlPg0KICAgIDwvUldQaWN0dXJlSW5mbz4NCiAgICA8UldQaWN0dXJlS" +
                        "W5mbz4NCiAgICAgIDxGaWVsZE5hbWU+Q1VTOlBob25lTnVtYmVyPC9GaWVsZE5hbWU+DQogICAgICA8U" +
                        "GljdHVyZT5AUCgjIyMpICMjIy0jIyMjUEI8L1BpY3R1cmU+DQogICAgPC9SV1BpY3R1cmVJbmZvPg0KI" +
                        "CAgIDxSV1BpY3R1cmVJbmZvPg0KICAgICAgPEZpZWxkTmFtZT5DVVM6RXh0ZW5zaW9uPC9GaWVsZE5hb" +
                        "WU+DQogICAgICA8UGljdHVyZT5AUCZsdDsmbHQ7Jmx0OyNQQjwvUGljdHVyZT4NCiAgICA8L1JXUGljd" +
                        "HVyZUluZm8+DQogICAgPFJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPkNVUzpQaG9uZVR5c" +
                        "GU8L0ZpZWxkTmFtZT4NCiAgICAgIDxQaWN0dXJlPkBzODwvUGljdHVyZT4NCiAgICA8L1JXUGljdHVyZ" +
                        "UluZm8+DQogICAgPFJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPlNUQTpTdGF0ZUNvZGU8L" +
                        "0ZpZWxkTmFtZT4NCiAgICAgIDxQaWN0dXJlPkBzMjwvUGljdHVyZT4NCiAgICA8L1JXUGljdHVyZUluZ" +
                        "m8+DQogICAgPFJXUGljdHVyZUluZm8+DQogICAgICA8RmllbGROYW1lPlNUQTpOYW1lPC9GaWVsZE5hb" +
                        "WU+DQogICAgICA8UGljdHVyZT5AczI1PC9QaWN0dXJlPg0KICAgIDwvUldQaWN0dXJlSW5mbz4NCiAgP" +
                        "C9QaWN0dXJlcz4NCjwvUldWaWV3RGVzY3JpcHRvcj4=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            this.detailBand1 = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.TableTableAdapter = new Clarion.Data.DynFileAdapter();
            this.dataSet1 = new XtraReportSerialization.dataSet1();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.AddressField = new DevExpress.XtraReports.UI.CalculatedField();
            this.CSZField = new DevExpress.XtraReports.UI.CalculatedField();
            this.FullNameField = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // detailBand1
            // 
            this.detailBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label1,
                        this.label8,
                        this.label6,
                        this.label7,
                        this.label4});
            this.detailBand1.Height = 82;
            this.detailBand1.MultiColumn.Direction = DevExpress.XtraReports.UI.ColumnDirection.AcrossThenDown;
            this.detailBand1.MultiColumn.Mode = DevExpress.XtraReports.UI.MultiColumnMode.UseColumnCount;
            this.detailBand1.Name = "detailBand1";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.Height = 29;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label10,
                        this.label3,
                        this.label2,
                        this.label9,
                        this.label5});
            this.reportHeaderBand1.Height = 75;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line1});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("CUS:COMPANY", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.Height = 2;
            this.GroupHeader1.Name = "GroupHeader1";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.GroupUnion = DevExpress.XtraReports.UI.GroupFooterUnion.WithLastDetail;
            this.GroupFooter1.Height = 2;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line2});
            this.ReportFooter.Height = 3;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // label1
            // 
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CUS:CUSTNUMBER", "@n_7")});
            this.label1.Location = new System.Drawing.Point(17, 8);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.Size = new System.Drawing.Size(42, 17);
            this.label1.Text = "label1";
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "CSZField", "")});
            this.label8.Location = new System.Drawing.Point(342, 58);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.Size = new System.Drawing.Size(258, 17);
            this.label8.Text = "label8";
            // 
            // label6
            // 
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "FullNameField", "@S30")});
            this.label6.Location = new System.Drawing.Point(342, 8);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.Size = new System.Drawing.Size(258, 17);
            this.label6.Text = "label6";
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "AddressField", "")});
            this.label7.Location = new System.Drawing.Point(342, 33);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.Size = new System.Drawing.Size(258, 18);
            this.label7.Text = "label7";
            // 
            // label4
            // 
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CUS:COMPANY", "@s20")});
            this.label4.Location = new System.Drawing.Point(92, 8);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(217, 18);
            this.label4.StyleName = "DataField";
            // 
            // pageInfo2
            // 
            this.pageInfo2.Format = "Page {0} of {1}";
            this.pageInfo2.Location = new System.Drawing.Point(331, 6);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Size = new System.Drawing.Size(313, 23);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Location = new System.Drawing.Point(6, 6);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.Size = new System.Drawing.Size(313, 23);
            this.pageInfo1.StyleName = "PageInfo";
            // 
            // label10
            // 
            this.label10.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label10.Location = new System.Drawing.Point(342, 58);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.Size = new System.Drawing.Size(217, 17);
            this.label10.StylePriority.UseFont = false;
            this.label10.Text = "CustName / Address";
            // 
            // label3
            // 
            this.label3.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label3.Location = new System.Drawing.Point(92, 58);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.Size = new System.Drawing.Size(67, 17);
            this.label3.StylePriority.UseFont = false;
            this.label3.Text = "Company";
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label2.Location = new System.Drawing.Point(17, 58);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.Size = new System.Drawing.Size(50, 17);
            this.label2.StylePriority.UseFont = false;
            this.label2.Text = "CustNo";
            // 
            // label9
            // 
            this.label9.BorderColor = System.Drawing.SystemColors.WindowText;
            this.label9.CanGrow = false;
            this.label9.Font = new System.Drawing.Font("Times New Roman", 11.75F, ((System.Drawing.FontStyle)((System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Underline))));
            this.label9.ForeColor = System.Drawing.Color.DarkGreen;
            this.label9.Location = new System.Drawing.Point(8, 33);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.Size = new System.Drawing.Size(633, 17);
            this.label9.StylePriority.UseBorderColor = false;
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseForeColor = false;
            this.label9.StylePriority.UseTextAlignment = false;
            this.label9.Text = "(NOTE: Please Edit The Path To The External Function DLL)";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.BottomCenter;
            this.label9.Visible = false;
            this.label9.WordWrap = false;
            // 
            // label5
            // 
            this.label5.Font = new System.Drawing.Font("Times New Roman", 18F, ((System.Drawing.FontStyle)((System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Underline))));
            this.label5.Location = new System.Drawing.Point(8, 0);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(638, 27);
            this.label5.StyleName = "Title";
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "Customer\'s Report - Using External Function";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // line1
            // 
            this.line1.Location = new System.Drawing.Point(0, 0);
            this.line1.Name = "line1";
            this.line1.Size = new System.Drawing.Size(650, 2);
            // 
            // line2
            // 
            this.line2.Location = new System.Drawing.Point(0, 0);
            this.line2.Name = "line2";
            this.line2.Size = new System.Drawing.Size(650, 2);
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.ConcurrencyCheck = false;
            this.TableTableAdapter.DeleteCommand = null;
            this.TableTableAdapter.Filter = "";
            this.TableTableAdapter.InsertCommand = null;
            this.TableTableAdapter.NoMemo = false;
            this.TableTableAdapter.Order = "";
            this.TableTableAdapter.SelectCommand = null;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            this.TableTableAdapter.UpdateCommand = null;
            this.TableTableAdapter.XmlViewDescriptor = resources.GetString("TableTableAdapter.XmlViewDescriptor");
            // 
            // dataSet1
            // 
            this.dataSet1.DataSetName = "dataSet1";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            // 
            // AddressField
            // 
            this.AddressField.DataSource = this.dataSet1;
            this.AddressField.Expression = "CHOOSE(CUS:ADDRESS2=\'\' ,CUS:ADDRESS1 ,CLIP(CUS:ADDRESS1 )&amp;\', \'&amp;CLIP(CUS:ADDRESS2)" +
                ")";
            this.AddressField.FieldType = DevExpress.XtraReports.UI.FieldType.String;
            this.AddressField.Name = "AddressField";
            // 
            // CSZField
            // 
            this.CSZField.DataSource = this.dataSet1;
            this.CSZField.Expression = "CLIP(CUS:CITY) &amp;\', \'&amp; CLIP(CUS:STATE) &amp;\'  \'&amp; CLIP(CUS:ZIPCODE)";
            this.CSZField.FieldType = DevExpress.XtraReports.UI.FieldType.String;
            this.CSZField.Name = "CSZField";
            // 
            // FullNameField
            // 
            this.FullNameField.DataSource = this.dataSet1;
            this.FullNameField.Expression = "FullNameFunction(CUS:FIRSTNAME,CUS:MI,CUS:LASTNAME)";
            this.FullNameField.FieldType = DevExpress.XtraReports.UI.FieldType.String;
            this.FullNameField.Name = "FullNameField";
            // 
            // xtraReport1
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.detailBand1,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.GroupHeader1,
                        this.GroupFooter1,
                        this.ReportFooter});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.AddressField,
                        this.CSZField,
                        this.FullNameField});
            this.DataAdapter = this.TableTableAdapter;
            this.DataSource = this.dataSet1;
            this.Name = "xtraReport1";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Version = "9.1";
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// &lt;summary&gt;
    ///Represents a strongly typed in-memory cache of data.
    ///&lt;/summary&gt;
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataSet1 : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dataSet1 cln = ((dataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataSet1";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataSet1 ds = new dataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        &amp;&amp; (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// &lt;summary&gt;
        ///Represents the strongly named DataTable class.
        ///&lt;/summary&gt;
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn column_CUS_CUSTNUMBER;
            private global::System.Data.DataColumn column_CUS_COMPANY;
            private global::System.Data.DataColumn column_CUS_FIRSTNAME;
            private global::System.Data.DataColumn column_CUS_MI;
            private global::System.Data.DataColumn column_CUS_LASTNAME;
            private global::System.Data.DataColumn column_CUS_ADDRESS1;
            private global::System.Data.DataColumn column_CUS_ADDRESS2;
            private global::System.Data.DataColumn column_CUS_CITY;
            private global::System.Data.DataColumn column_CUS_STATE;
            private global::System.Data.DataColumn column_CUS_ZIPCODE;
            private global::System.Data.DataColumn column_CUS_PHONENUMBER;
            private global::System.Data.DataColumn column_CUS_EXTENSION;
            private global::System.Data.DataColumn column_CUS_PHONETYPE;
            private global::System.Data.DataColumn column_STA_STATECODE;
            private global::System.Data.DataColumn column_STA_NAME;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_CUSTNUMBERColumn {
                get {
                    return this.column_CUS_CUSTNUMBER;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_COMPANYColumn {
                get {
                    return this.column_CUS_COMPANY;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_FIRSTNAMEColumn {
                get {
                    return this.column_CUS_FIRSTNAME;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_MIColumn {
                get {
                    return this.column_CUS_MI;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_LASTNAMEColumn {
                get {
                    return this.column_CUS_LASTNAME;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_ADDRESS1Column {
                get {
                    return this.column_CUS_ADDRESS1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_ADDRESS2Column {
                get {
                    return this.column_CUS_ADDRESS2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_CITYColumn {
                get {
                    return this.column_CUS_CITY;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_STATEColumn {
                get {
                    return this.column_CUS_STATE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_ZIPCODEColumn {
                get {
                    return this.column_CUS_ZIPCODE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_PHONENUMBERColumn {
                get {
                    return this.column_CUS_PHONENUMBER;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_EXTENSIONColumn {
                get {
                    return this.column_CUS_EXTENSION;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _CUS_PHONETYPEColumn {
                get {
                    return this.column_CUS_PHONETYPE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _STA_STATECODEColumn {
                get {
                    return this.column_STA_STATECODE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _STA_NAMEColumn {
                get {
                    return this.column_STA_NAME;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(int _CUS_CUSTNUMBER, string _CUS_COMPANY, string _CUS_FIRSTNAME, string _CUS_MI, string _CUS_LASTNAME, string _CUS_ADDRESS1, string _CUS_ADDRESS2, string _CUS_CITY, string _CUS_STATE, string _CUS_ZIPCODE, string _CUS_PHONENUMBER, string _CUS_EXTENSION, string _CUS_PHONETYPE, string _STA_STATECODE, string _STA_NAME) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        _CUS_CUSTNUMBER,
                        _CUS_COMPANY,
                        _CUS_FIRSTNAME,
                        _CUS_MI,
                        _CUS_LASTNAME,
                        _CUS_ADDRESS1,
                        _CUS_ADDRESS2,
                        _CUS_CITY,
                        _CUS_STATE,
                        _CUS_ZIPCODE,
                        _CUS_PHONENUMBER,
                        _CUS_EXTENSION,
                        _CUS_PHONETYPE,
                        _STA_STATECODE,
                        _STA_NAME};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column_CUS_CUSTNUMBER = base.Columns["CUS:CUSTNUMBER"];
                this.column_CUS_COMPANY = base.Columns["CUS:COMPANY"];
                this.column_CUS_FIRSTNAME = base.Columns["CUS:FIRSTNAME"];
                this.column_CUS_MI = base.Columns["CUS:MI"];
                this.column_CUS_LASTNAME = base.Columns["CUS:LASTNAME"];
                this.column_CUS_ADDRESS1 = base.Columns["CUS:ADDRESS1"];
                this.column_CUS_ADDRESS2 = base.Columns["CUS:ADDRESS2"];
                this.column_CUS_CITY = base.Columns["CUS:CITY"];
                this.column_CUS_STATE = base.Columns["CUS:STATE"];
                this.column_CUS_ZIPCODE = base.Columns["CUS:ZIPCODE"];
                this.column_CUS_PHONENUMBER = base.Columns["CUS:PHONENUMBER"];
                this.column_CUS_EXTENSION = base.Columns["CUS:EXTENSION"];
                this.column_CUS_PHONETYPE = base.Columns["CUS:PHONETYPE"];
                this.column_STA_STATECODE = base.Columns["STA:STATECODE"];
                this.column_STA_NAME = base.Columns["STA:NAME"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column_CUS_CUSTNUMBER = new global::System.Data.DataColumn("CUS:CUSTNUMBER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_CUSTNUMBER);
                this.column_CUS_COMPANY = new global::System.Data.DataColumn("CUS:COMPANY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_COMPANY);
                this.column_CUS_FIRSTNAME = new global::System.Data.DataColumn("CUS:FIRSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_FIRSTNAME);
                this.column_CUS_MI = new global::System.Data.DataColumn("CUS:MI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_MI);
                this.column_CUS_LASTNAME = new global::System.Data.DataColumn("CUS:LASTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_LASTNAME);
                this.column_CUS_ADDRESS1 = new global::System.Data.DataColumn("CUS:ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_ADDRESS1);
                this.column_CUS_ADDRESS2 = new global::System.Data.DataColumn("CUS:ADDRESS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_ADDRESS2);
                this.column_CUS_CITY = new global::System.Data.DataColumn("CUS:CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_CITY);
                this.column_CUS_STATE = new global::System.Data.DataColumn("CUS:STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_STATE);
                this.column_CUS_ZIPCODE = new global::System.Data.DataColumn("CUS:ZIPCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_ZIPCODE);
                this.column_CUS_PHONENUMBER = new global::System.Data.DataColumn("CUS:PHONENUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_PHONENUMBER);
                this.column_CUS_EXTENSION = new global::System.Data.DataColumn("CUS:EXTENSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_EXTENSION);
                this.column_CUS_PHONETYPE = new global::System.Data.DataColumn("CUS:PHONETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_CUS_PHONETYPE);
                this.column_STA_STATECODE = new global::System.Data.DataColumn("STA:STATECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_STA_STATECODE);
                this.column_STA_NAME = new global::System.Data.DataColumn("STA:NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_STA_NAME);
                this.column_CUS_COMPANY.MaxLength = 20;
                this.column_CUS_FIRSTNAME.MaxLength = 20;
                this.column_CUS_MI.MaxLength = 1;
                this.column_CUS_LASTNAME.MaxLength = 25;
                this.column_CUS_ADDRESS1.MaxLength = 35;
                this.column_CUS_ADDRESS2.MaxLength = 35;
                this.column_CUS_CITY.MaxLength = 25;
                this.column_CUS_STATE.MaxLength = 2;
                this.column_CUS_ZIPCODE.MaxLength = 10;
                this.column_CUS_PHONENUMBER.MaxLength = 10;
                this.column_CUS_EXTENSION.MaxLength = 4;
                this.column_CUS_PHONETYPE.MaxLength = 8;
                this.column_STA_STATECODE.ReadOnly = true;
                this.column_STA_STATECODE.MaxLength = 2;
                this.column_STA_NAME.ReadOnly = true;
                this.column_STA_NAME.MaxLength = 25;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataSet1 ds = new dataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            &amp;&amp; (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// &lt;summary&gt;
        ///Represents strongly named DataRow class.
        ///&lt;/summary&gt;
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int _CUS_CUSTNUMBER {
                get {
                    try {
                        return ((int)(this[this.table_Table._CUS_CUSTNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:CUSTNUMBER\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_CUSTNUMBERColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_COMPANY {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_COMPANYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:COMPANY\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_COMPANYColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_FIRSTNAME {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_FIRSTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:FIRSTNAME\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_FIRSTNAMEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_MI {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_MIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:MI\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_MIColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_LASTNAME {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_LASTNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:LASTNAME\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_LASTNAMEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_ADDRESS1 {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_ADDRESS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:ADDRESS1\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_ADDRESS1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_ADDRESS2 {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_ADDRESS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:ADDRESS2\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_ADDRESS2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_CITY {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_CITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:CITY\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_CITYColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_STATE {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:STATE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_STATEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_ZIPCODE {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_ZIPCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:ZIPCODE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_ZIPCODEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_PHONENUMBER {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_PHONENUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:PHONENUMBER\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_PHONENUMBERColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_EXTENSION {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_EXTENSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:EXTENSION\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_EXTENSIONColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _CUS_PHONETYPE {
                get {
                    try {
                        return ((string)(this[this.table_Table._CUS_PHONETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUS:PHONETYPE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._CUS_PHONETYPEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _STA_STATECODE {
                get {
                    try {
                        return ((string)(this[this.table_Table._STA_STATECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STA:STATECODE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._STA_STATECODEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _STA_NAME {
                get {
                    try {
                        return ((string)(this[this.table_Table._STA_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STA:NAME\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table._STA_NAMEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_CUSTNUMBERNull() {
                return this.IsNull(this.table_Table._CUS_CUSTNUMBERColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_CUSTNUMBERNull() {
                this[this.table_Table._CUS_CUSTNUMBERColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_COMPANYNull() {
                return this.IsNull(this.table_Table._CUS_COMPANYColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_COMPANYNull() {
                this[this.table_Table._CUS_COMPANYColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_FIRSTNAMENull() {
                return this.IsNull(this.table_Table._CUS_FIRSTNAMEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_FIRSTNAMENull() {
                this[this.table_Table._CUS_FIRSTNAMEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_MINull() {
                return this.IsNull(this.table_Table._CUS_MIColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_MINull() {
                this[this.table_Table._CUS_MIColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_LASTNAMENull() {
                return this.IsNull(this.table_Table._CUS_LASTNAMEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_LASTNAMENull() {
                this[this.table_Table._CUS_LASTNAMEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_ADDRESS1Null() {
                return this.IsNull(this.table_Table._CUS_ADDRESS1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_ADDRESS1Null() {
                this[this.table_Table._CUS_ADDRESS1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_ADDRESS2Null() {
                return this.IsNull(this.table_Table._CUS_ADDRESS2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_ADDRESS2Null() {
                this[this.table_Table._CUS_ADDRESS2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_CITYNull() {
                return this.IsNull(this.table_Table._CUS_CITYColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_CITYNull() {
                this[this.table_Table._CUS_CITYColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_STATENull() {
                return this.IsNull(this.table_Table._CUS_STATEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_STATENull() {
                this[this.table_Table._CUS_STATEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_ZIPCODENull() {
                return this.IsNull(this.table_Table._CUS_ZIPCODEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_ZIPCODENull() {
                this[this.table_Table._CUS_ZIPCODEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_PHONENUMBERNull() {
                return this.IsNull(this.table_Table._CUS_PHONENUMBERColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_PHONENUMBERNull() {
                this[this.table_Table._CUS_PHONENUMBERColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_EXTENSIONNull() {
                return this.IsNull(this.table_Table._CUS_EXTENSIONColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_EXTENSIONNull() {
                this[this.table_Table._CUS_EXTENSIONColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_CUS_PHONETYPENull() {
                return this.IsNull(this.table_Table._CUS_PHONETYPEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_CUS_PHONETYPENull() {
                this[this.table_Table._CUS_PHONETYPEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_STA_STATECODENull() {
                return this.IsNull(this.table_Table._STA_STATECODEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_STA_STATECODENull() {
                this[this.table_Table._STA_STATECODEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_STA_NAMENull() {
                return this.IsNull(this.table_Table._STA_NAMEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_STA_NAMENull() {
                this[this.table_Table._STA_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        /// &lt;summary&gt;
        ///Row event argument class
        ///&lt;/summary&gt;
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
</Report>
      <Description />
      <LastModificationDate>0001-01-01T00:00:00</LastModificationDate>
      <Name>CustomerReport</Name>
    </ReportLibraryItem>
  </LibraryItems>
  <Externals>
    <ClaExternalFunctionBase xsi:type="ClaExternalFunction">
      <Path>C:\Clarion9\Examples\ReportWriter\REPXL Reports\ExtFunc\SVFunc.dll</Path>
      <EntryPoint>FULLNAME@Fsbsbsb</EntryPoint>
      <Name>FullNameFunction</Name>
      <Description>Concat FName, LName</Description>
      <ParametersCount>3</ParametersCount>
    </ClaExternalFunctionBase>
  </Externals>
</ReportLibrary>